name: CI

on:
  push:
    branches:
      - master
  pull_request:
  merge_group:

concurrency:
  # Ensure that we only run one concurrent job for Pull Requests. This ensures
  # that someone can't kill our throughput by pushing a bunch of commits to a
  # single branch in rapid succession.
  #
  # However, for master builds, we allow maximum concurrency. This is achieved
  # because `github.head_ref` isn't defined there, and `github.run_id` is
  # globally unique in this repo.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  build-workspace-images:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # We need the whole history so we can diff against `master` to determine
        # what images need to be built.
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2 # https://github.com/marketplace/actions/docker-setup-qemu
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2 # https://github.com/marketplace/actions/docker-setup-buildx

    - name: Build the workspace-desktop docker image if needed
      run: ./tools/build-image-if-needed.sh workspaces/desktop prairielearn/workspace-desktop:latest
    - name: Build the workspace-jupyterlab docker image if needed
      run: ./tools/build-image-if-needed.sh workspaces/jupyterlab prairielearn/workspace-jupyterlab:latest
    - name: Build the workspace-rstudio docker image if needed
      run: ./tools/build-image-if-needed.sh workspaces/rstudio prairielearn/workspace-rstudio:latest
    - name: Build the workspace-xtermjs docker image if needed
      run: ./tools/build-image-if-needed.sh workspaces/xtermjs prairielearn/workspace-xtermjs:latest

  build-grader-images:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # We need the whole history so we can diff against `master` to determine
        # what images need to be built.
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2 # https://github.com/marketplace/actions/docker-setup-qemu
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2 # https://github.com/marketplace/actions/docker-setup-buildx

    - name: Build the grader-c docker image if needed
      run: ./tools/build-image-if-needed.sh graders/c prairielearn/grader-c:latest
    - name: Build the grader-java docker image if needed
      run: ./tools/build-image-if-needed.sh graders/java prairielearn/grader-java:latest
    - name: Build the grader-python docker image if needed
      run: ./tools/build-image-if-needed.sh graders/python prairielearn/grader-python:latest
    - name: Build the grader-r docker image if needed
      run: ./tools/build-image-if-needed.sh graders/r prairielearn/grader-r:latest

  build-core-images:
        runs-on: ubuntu-latest
    
        env:
          DOCKERHUB_USERNAME_SECRET: ${{ secrets.DOCKERHUB_USERNAME }}
    
        steps:
        - name: Checkout Code
          uses: actions/checkout@v3
    
        - name: Login to DockerHub
          if: ${{ env.DOCKERHUB_USERNAME_SECRET != '' }}
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
    
        - name: Build and Push Image
          if: ${{ env.DOCKERHUB_USERNAME_SECRET != '' }}
          run: |
            docker build -t myimage:latest .
            docker push myimage:latest

  native-checks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install OS packages
      run: sudo apt-get install -y graphviz graphviz-dev

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: pip
        cache-dependency-path: images/plbase/python-requirements.txt
    - name: Install Python dependencies
      run: pip install -r images/plbase/python-requirements.txt

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'
    - name: Install Node dependencies
      run: yarn install --immutable

    - name: Set up Turborepo cache
      uses: actions/cache@v3
      with:
        path: ./node_modules/.cache/turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Build all code
      run: make build
    # - name: Run the JavaScript linter
    #   run: make lint-js
    # - name: Run the HTML linter
    #   run: make lint-html
    # - name: Run the links linter
    #   run: make lint-links
    # - name: Run the Python typechecker
    #   run: make typecheck-python
    # - name: Run the Python linter
    #   run: make lint-python
    - name: Run the Python tests
      run: make test-python
      timeout-minutes: 5
    
    # The rest of our code is typechecked in the `build` Makefile target, which
    # is run above.
    - name: Run the TypeScript typechecker for tools
      run: make typecheck-tools
