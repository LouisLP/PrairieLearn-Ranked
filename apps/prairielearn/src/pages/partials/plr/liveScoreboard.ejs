<div
  class="tab-pane fade text-white show active"
  id="nav-live-scoreboard"
  role="tabpanel"
  aria-labelledby="nav-live-scoreboard-tab"
>
  <h1>Live Results</h1>
  <div id="live-results">
  </div>
  <script>
      const courseInstanceId = "<%= course_instance.id %>";

      // Establish an SSE connection
      const source = new EventSource(`/pl/course_instance/${courseInstanceId}/plrStudent/live_updates`);


 

      // Receive updates from the server
      source.addEventListener(
        'message',
        function (event) {
          const data = JSON.parse(event.data);
          updateScores(data);
        },
        false,
      );

      source.addEventListener(
        'connected',
        function (event) {
          const data = JSON.parse(event.data);
          const currentUserElement = document.getElementById('current-user');
          currentUserElement.textContent = `Connected users: ${data}`;
        },
        false,
      );

      // Function to update the scores in the table
      function updateScores(scores) {
        const tableBody = document.querySelector('tbody');
        tableBody.innerHTML = '';
        if (scores.length === 0) {
          const row = document.createElement('tr');
          const cell = document.createElement('td');
          cell.setAttribute('colspan', '5');
          cell.textContent = 'No live scores available.';
          row.appendChild(cell);
          tableBody.appendChild(row);
        }
        scores.forEach((score, index) => {
          const row = document.createElement('tr');
          const rankCell = document.createElement('th');
          const nameCell = document.createElement('td');
          const achievementCell = document.createElement('td');
          const scoreCell = document.createElement('td');
          const timeCell = document.createElement('td');
          rankCell.setAttribute('scope', 'row');
          rankCell.textContent = index + 1;
          nameCell.textContent = score.name;
          achievementCell.textContent = score.achievements;
          scoreCell.textContent = score.score;
          var time = score.time;
          var dateFormatTime = new Date(time);
          timeCell.textContent =
            dateFormatTime.getHours() +
            ':' +
            dateFormatTime.getMinutes() +
            ':' +
            dateFormatTime.getSeconds();
          row.appendChild(rankCell);
          row.appendChild(nameCell);
          row.appendChild(achievementCell);
          row.appendChild(scoreCell);
          row.appendChild(timeCell);
          tableBody.appendChild(row);
        });
      }

      window.addEventListener('beforeunload', function () {
        // Create a new request
        var req = new XMLHttpRequest();

        // Initialize the request
        req.open('POST', '/sse/close', false); // `false` makes the request synchronous

        // Get the clientId from the cookie
        var clientId = document.cookie.replace(
          /(?:(?:^|.*;\s*)clientId\s*=\s*([^;]*).*$)|^.*$/,
          '$1',
        );

        // Send the client's ID in the body of the request
        req.send(JSON.stringify({ id: clientId }));
      });
    </script>
</div>
