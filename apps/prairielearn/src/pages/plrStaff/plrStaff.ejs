<!doctype html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>
    <!-- Custom styling -->
    <%- compiled_stylesheet_tag('PLR.css') %>
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="img/favicon/favicon.ico" />
    <!-- Google Icons -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
  </head>
  <body>
    <%- include('../partials/navbar'); %>
    <!-- Main content -->
    <main class="container">
      <div class="row">
        <!-- First column: Scoreboards -->
        <div class="col-md-7">
          <!-- <form action="/join-session" method="post">
            <button id="join-session-btn" class="btn btn-dark rounded-pill join-session" id="nav-join-session-tab" type="submit" role="tab" aria-controls="nav-join-session" aria-selected="false">
              Join Live Session
            </button>
          </form> -->
          <a
            href="/join-session"
            class="btn btn-dark rounded-pill join-session"
            id="nav-join-session-tab"
            role="tab"
            aria-controls="nav-join-session"
            aria-selected="false"
          >
            Join Live Session
          </a>
          <!-- Tabs to navigate between scoreboards -->
          <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
              <!-- Tab 1: Live Scoreboard -->
              <button
                class="nav-link active scoreboard"
                id="nav-live-scoreboard-tab"
                data-bs-toggle="tab"
                data-bs-target="#nav-live-scoreboard"
                type="button"
                role="tab"
                aria-controls="nav-live-scoreboard"
                aria-selected="true"
              >
                Live Scoreboard
              </button>
              <!-- Tab 2: Seasonal Scoreboard -->
              <button
                class="nav-link scoreboard"
                id="nav-seasonal-scoreboard-tab"
                data-bs-toggle="tab"
                data-bs-target="#nav-seasonal-scoreboard"
                type="button"
                role="tab"
                aria-controls="nav-seasonal-scoreboard"
                aria-selected="false"
              >
                Seasonal Scoreboard
              </button>
              <!-- Tab 3: All-Time Scoreboard -->
              <button
                class="nav-link scoreboard"
                id="nav-all-time-scoreboard-tab"
                data-bs-toggle="tab"
                data-bs-target="#nav-all-time-scoreboard"
                type="button"
                role="tab"
                aria-controls="nav-all-time-scoreboard"
                aria-selected="false"
              >
                All-Time Scoreboard
              </button>
            </div>
          </nav>
          <div class="tab-content" id="nav-tabContent">
            <!-- Live Scoreboard -->
            <%- include('../partials/plr/liveScoreboard.ejs'); %>
            <!-- Seasonal Scoreboard -->
            <%- include('../partials/plr/seasonalScoreboard.ejs'); %>
            <!-- All-Time Scoreboard -->
            <%- include('../partials/plr/allTimeScoreboard.ejs'); %>
          </div>
        </div>
        <!-- Second column: Profile and Cards -->
        <!-- Second column: Profile and Cards -->
        <div class="maincardcontainer col-md-5 mt-3">
          <!-- Quizzes -->
          <%- include('../partials/plr/availableQuizzesList.ejs'); %>
        </div>
      </div>
    </main>

    <script src="/socket.io/socket.io.js"></script>

    <script>
      function formatTime(time) {
        const date = new Date(time);
        const hours = date.getHours().toString().padStart(2, '0');
        const minutes = date.getMinutes().toString().padStart(2, '0');
        const seconds = date.getSeconds().toString().padStart(2, '0');
        return `${hours}:${minutes}:${seconds}`;
      }
    </script>

    <script>
      function formatTime(time) {
        const date = new Date(time);
        const hours = date.getHours().toString().padStart(2, '0');
        const minutes = date.getMinutes().toString().padStart(2, '0');
        const seconds = date.getSeconds().toString().padStart(2, '0');
        return `${hours}:${minutes}:${seconds}`;
      }
    </script>

    <script>
      // Join session
      const joinSessionBtn = document.getElementById('join-session-btn');
      joinSessionBtn.addEventListener('click', (event) => {
        event.preventDefault();
        window.location.href = '/join-session';
        //more work to be done here
      });
    </script>
    <script>
      // // Establish a WebSocket connection
      // const socket = io();
      const userId = 1; // Get the user ID from the server
      const studentId = 1; // Get the student ID from the server
      // socket.emit('user connected', userId, studentId); // Send user ID to the server
      // // Receive the list of connected users from the server
      // socket.on('connected users', (users) => {
      //   const currentUserElement = document.getElementById('current-user');
      //   currentUserElement.textContent = `Connected users: ${users.length}`;
      // });
      // // Receive score updates from the server
      // socket.on('score update', (data) => {
      //   const { scoreData } = data;
      //   console.log(data);
      //   updateScores(scoreData);
      // });
      // Function to update the scores in the table
      function updateScores(scores) {
        const tableBody = document.querySelector('tbody');
        tableBody.innerHTML = '';
        if (scores.length === 0) {
          const row = document.createElement('tr');
          const cell = document.createElement('td');
          cell.setAttribute('colspan', '5');
          cell.textContent = 'No live scores available.';
          row.appendChild(cell);
          tableBody.appendChild(row);
        }
        scores.forEach((score, index) => {
          const row = document.createElement('tr');
          const rankCell = document.createElement('th');
          const nameCell = document.createElement('td');
          const achievementCell = document.createElement('td');
          const scoreCell = document.createElement('td');
          const timeCell = document.createElement('td');
          rankCell.setAttribute('scope', 'row');
          rankCell.textContent = index + 1;
          nameCell.textContent = score.name;
          achievementCell.textContent = score.achievements;
          scoreCell.textContent = score.score;
          var time = score.time;
          var dateFormatTime = new Date(time);
          timeCell.textContent =
            dateFormatTime.getHours() +
            ':' +
            dateFormatTime.getMinutes() +
            ':' +
            dateFormatTime.getSeconds();
          row.appendChild(rankCell);
          row.appendChild(nameCell);
          row.appendChild(achievementCell);
          row.appendChild(scoreCell);
          row.appendChild(timeCell);
          tableBody.appendChild(row);
        });
      }
    </script>
  </body>
</html>
